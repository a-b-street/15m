var searchIndex = new Map(JSON.parse('[["graph",{"t":"PPPGPPFFGFFPPGFFFPFFFFPONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNOONNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNONONONNNOOOONNNNONONNOOONNNOONNNNNNNNNCNNNOONOOOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOH","n":["Backwards","Both","Dir","Direction","Forwards","Geomedea","Graph","GtfsModel","GtfsSource","Intersection","IntersectionID","None","","PathStep","Position","ProfileID","Road","","RoadID","Route","Router","Timer","Transit","access","add_profile","allows_backwards","allows_forwards","borrow","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","boundary_polygon","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","closest_road","cmp","","","compare","","","cost","deref","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","deserialize","","","","","","","","","done","drop","","","","","","","","","","","","","","dst_i","empty","end","eq","","","","","","equivalent","","","","","","","","","find_edge","fmt","","","","","","fraction_along","from","","","","","","","","","","","","","","get_costs","get_inverted_boundary","gtfs","hash","","","id","","init","","","","","","","","","","","","","","intersection","intersections","","into","","","","","","","","","","","","","","is_within","","","","","","","","","","","","","","length_meters","linestring","","log","mercator","new","","","node","node1","node2","osm_tags","parse","partial_cmp","","","point","pop","profile_names","push","render_debug","road","roads","","route","route_between_intersections","route_between_many_intersections","routers","routes","serialize","","","","","","","","","snap","snap_route","snap_to_road","split_linestrings","src_i","start","step","steps","stops","","timestamp","to_gj","to_owned","","","","","transit_route_gj","trips","trips_from","try_from","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","type_id","","","","","","","","","","","","","","update_costs","walking_profile_for_transit","way","forwards","road","stop1","stop2","trip","score_similarity"],"q":[[0,"graph"],[327,"graph::PathStep"],[332,"graph::snap"],[333,"alloc::vec"],[334,"alloc::string"],[335,"core::ops::function"],[336,"alloc::boxed"],[337,"geo_types::geometry::polygon"],[338,"graph::route"],[339,"rstar::rtree"],[340,"core::cmp"],[341,"graph::gtfs"],[342,"core::result"],[343,"serde_core::de"],[344,"graph::timer"],[345,"core::option"],[346,"core::fmt"],[347,"chrono::naive::time"],[348,"core::time"],[349,"std::collections::hash::map"],[350,"anyhow"],[351,"core::hash"],[352,"geo_types::geometry::line_string"],[353,"core::convert"],[354,"utils::mercator"],[355,"js_sys"],[356,"utils::osm2graph"],[357,"osm_reader"],[358,"utils::tags"],[359,"geo_types::geometry::point"],[360,"alloc::collections::btree::map"],[361,"geojson::feature_collection"],[362,"serde_core::ser"],[363,"geo_types::geometry::coord"],[364,"core::marker"],[365,"geojson"],[366,"core::any"]],"i":"Al0Gj`10`````01````Ch````0bh11CfCd5BlBd4AhAjAb;8CbAn;87<659432=:10;9432=0432=0432=05432432:87<659432=:10;87<659432=:10;659432=:1787<659432=:10;:68432=0;4443332229432=0;087<659432=:10;999432:187<659432=:10;08987<659432=:10;87<659432=:10;:8:797591:::64321797909155596659432=:1`998:8786:9:432=096687<659432=:10;87<659432=:10;87<659432=:10;59:Gf0Gh00`","f":"```````````````````````{bd}{{{j{fh}}l{A`{n}}}Ab}{{{j{b}}Ab}Ad}0{j{{j{c}}}{}}0000000000000{{{j{f}}}{{j{fc}}}{}}0000000000000{hAf}{{{j{Ah}}}Ah}{{{j{Aj}}}Aj}{{{j{Ab}}}Ab}{{{j{Al}}}Al}{{{j{An}}}An}{{j{j{fc}}}B`{}}0000{{jBb}B`}0000{BdBf}{{{j{Ah}}{j{Ah}}}Bh}{{{j{Aj}}{j{Aj}}}Bh}{{{j{Ab}}{j{Ab}}}Bh}{{j{j{c}}}Bh{}}00{bd}{Bj{{j{c}}}{}}0000000000000{Bj{{j{fc}}}{}}0000000000000{c{{Bn{Bl}}}C`}{c{{Bn{Bd}}}C`}{c{{Bn{h}}}C`}{c{{Bn{Ah}}}C`}{c{{Bn{Aj}}}C`}{c{{Bn{Ab}}}C`}{c{{Bn{Al}}}C`}{c{{Bn{b}}}C`}{c{{Bn{Cb}}}C`}{CdB`}{BjB`}0000000000000{bAj}{{}Bl}{CfAn}{{{j{Ah}}{j{Ah}}}Ad}{{{j{Aj}}{j{Aj}}}Ad}{{{j{Ab}}{j{Ab}}}Ad}{{{j{Al}}{j{Al}}}Ad}{{{j{An}}{j{An}}}Ad}{{{j{Ch}}{j{Ch}}}Ad}{{j{j{c}}}Ad{}}00000000{{{j{h}}AjAj}{{Cj{{j{b}}}}}}{{{j{Ah}}{j{fCl}}}Cn}{{{j{Aj}}{j{fCl}}}Cn}{{{j{Ab}}{j{fCl}}}Cn}{{{j{Al}}{j{fCl}}}Cn}{{{j{An}}{j{fCl}}}Cn}{{{j{Ch}}{j{fCl}}}Cn}{AnD`}{cc{}}0000000000000{{{j{h}}{d{Aj}}AbAdDbDb}{{Df{AhDd}}}}{{{j{h}}}{{Dh{l}}}}{hBl}{{{j{Ah}}{j{fc}}}B`Dj}{{{j{Aj}}{j{fc}}}B`Dj}{{{j{Ab}}{j{fc}}}B`Dj}{bAh}{CbAj}{{}Bj}0000000000000{AnAj}{{{j{Cf}}{j{h}}}{{d{Aj}}}}{hd}{{}c{}}0000000000000{{j{j{c}}}Ad{}}0000000000000{bD`}{{{j{Cf}}{j{h}}}Dl}{bDl}{{{j{Cd}}c}B`{{Dn{l}}}}{hE`}{{c{Cj{Eb}}}Cd{{Dn{l}}}}{{{j{{d{b}}}}Ab}Bd}{{{j{{Ed{Bb}}}}{j{fc}}{A`{n}}{A`{n}}{d{{Ef{l{A`{n}}}}}}{j{fCd}}}{{Dh{h}}}Eh}{CbEj}{bEj}0{bEl}{{{j{En}}{Cj{{j{E`}}}}}{{Dh{Bl}}}}{{{j{Ah}}{j{Ah}}}{{Cj{Bh}}}}{{{j{Aj}}{j{Aj}}}{{Cj{Bh}}}}{{{j{Ab}}{j{Ab}}}{{Cj{Bh}}}}{CbF`}{{{j{fCd}}}B`}{hFb}{{{j{fCd}}c}B`{{Dn{l}}}}{{{j{h}}}Fd}{AnAh}{hd}{Cbd}{{{j{Bd}}{j{h}}AnAn}{{Dh{Cf}}}}{{{j{Bd}}{j{h}}AjAj}{{Dh{Cf}}}}{{{j{Bd}}{j{h}}{d{Aj}}}{{Dh{Cf}}}}4{Bld}{{{j{Bl}}c}BnFf}{{{j{Bd}}c}BnFf}{{{j{h}}c}BnFf}{{{j{Ah}}c}BnFf}{{{j{Aj}}c}BnFf}{{{j{Ab}}c}BnFf}{{{j{Al}}c}BnFf}{{{j{b}}c}BnFf}{{{j{Cb}}c}BnFf}`{{{j{h}}{j{Dl}}Ab}{{Dh{Cf}}}}{{{j{h}}FhAb}An}{{{j{Cf}}{j{h}}e}{{d{{Ef{Dlc}}}}}{FjFl}{{n{Ah}{{Fn{c}}}}}}{bAj}{CfAn}{{{j{fCd}}c}B`{{Dn{l}}}}{Cfd}{Bld}{bd}{hCj}{{{j{b}}{j{h}}}G`}{jc{}}0000{{{j{h}}AnAnAdAdDbCd}{{Dh{l}}}}5`{c{{Bn{e}}}{}{}}0000000000000{{}{{Bn{c}}}{}}0000000000000{jGb}0000000000000{{{j{fBd}}{j{{d{b}}}}Ab}B`}7{bGd}{GfAd}{GfAh}```{{{j{Dl}}{j{Dl}}}{{Cj{{Ef{D`D`}}}}}}","D":"Hd","p":[[5,"Road",0],[5,"Vec",333],[0,"mut"],[5,"Graph",0],[1,"reference",null,null,1],[5,"String",334],[10,"Fn",335],[5,"Box",336,null,1],[5,"ProfileID",0],[1,"bool"],[5,"Polygon",337],[5,"RoadID",0],[5,"IntersectionID",0],[6,"Direction",0],[5,"Position",0],[1,"unit"],[1,"u8"],[5,"Router",0,338],[5,"RTree",339],[6,"Ordering",340],[1,"usize"],[5,"GtfsModel",0,341],[6,"Result",342,null,1],[10,"Deserializer",343],[5,"Intersection",0],[5,"Timer",0,344],[5,"Route",0,338],[6,"PathStep",0],[6,"Option",345,null,1],[5,"Formatter",346],[8,"Result",346],[1,"f64"],[5,"NaiveTime",347],[5,"Duration",348],[5,"HashMap",349],[8,"Result",350],[10,"Hasher",351],[5,"LineString",352],[10,"Into",353,null,1],[5,"Mercator",354],[5,"Function",355],[1,"slice"],[1,"tuple",null,null,1],[10,"OsmReader",356],[5,"NodeID",357],[5,"Tags",358],[1,"str"],[5,"Point",359],[5,"BTreeMap",360],[5,"FeatureCollection",361],[10,"Serializer",362],[5,"Coord",363],[10,"Copy",364],[10,"PartialEq",340],[17,"Output"],[5,"Feature",365],[5,"TypeId",366],[5,"WayID",357],[15,"Road",327],[15,"Transit",327],[6,"GtfsSource",0]],"r":[[7,341],[19,338],[20,338],[21,344],[27,338],[28,344],[30,341],[31,338],[41,338],[42,344],[44,341],[45,338],[71,338],[79,338],[80,344],[82,341],[83,338],[93,338],[94,344],[96,341],[97,338],[107,341],[108,338],[116,344],[117,338],[118,344],[120,341],[121,338],[132,341],[133,338],[157,338],[158,344],[160,341],[161,338],[179,338],[180,344],[182,341],[183,338],[194,338],[196,338],[197,344],[199,341],[200,338],[210,338],[211,344],[213,341],[214,338],[225,338],[227,344],[229,344],[230,338],[236,341],[241,344],[243,344],[248,338],[249,338],[250,338],[252,341],[253,341],[254,338],[265,338],[267,338],[268,344],[269,338],[270,341],[280,341],[281,341],[282,338],[283,344],[285,341],[286,338],[296,338],[297,344],[299,341],[300,338],[310,338],[311,344],[313,341],[314,338],[324,338]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAsBGwAAAAMABQABAAgAAQALAAIAEAAAABIAAQAWAAEAGQAAABwAGwA5ABUAUABFAJcABgCuABQAxAAAANMADgDjAAEA5gAAAOkAAwDuAAMA8wAAAPYAAQD9AAoACwEBAA4BAQASAQcAGwEpAEYBBwA=","P":[[27,"T"],[55,""],[61,"T"],[66,""],[75,"K"],[78,""],[79,"T"],[107,"__D"],[116,""],[140,"K"],[149,""],[157,"T"],[171,""],[174,"__H"],[177,""],[196,"U"],[210,"G2"],[224,""],[227,"I"],[228,""],[229,"I"],[230,""],[231,"R"],[232,""],[243,"I"],[244,""],[253,"__S"],[263,""],[265,"T,F"],[266,""],[268,"I"],[269,""],[274,"T"],[279,""],[282,"U,T"],[296,"U"],[310,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[8042]}