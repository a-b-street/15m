searchState.loadedDescShard("graph", 0, "A position along a road, along with the closer intersection\nCreate a router allowing every road in both directions, …\nData to be associated with the geometry being stored in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn a polygon covering the world, minus a hole for the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ninput_bytes: Bytes of an osm.pbf or osm.xml string …\nTakes a path to a GTFS directory. If no Mercator is …\nParses a string. Treats “transit” as Mode::Foot\nStop a nested step\nStart a new step with nested steps following it\nReturns GeoJSON with roads and stops\nGiven an input LineString (in Mercator), try to …\nStart a new step, with no nesting\nStarting from a stop at some time, find all the next trips …")